<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <joint name="laser_joint" type="fixed">
        <parent link="chassis"/>
        <!-- called laser_frame (and not _link) for well known convention -->
        <child link="laser_frame"/>
        <!-- since origin of chassis is in the back -->
        <origin xyz="0.1 0 0.175" rpy="0 0 0"/>
    </joint>

    <link name="laser_frame">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="red"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <!-- Mass specified by us. x y z, origin taken from visual tag (0 if not specified). -->
        <xacro:inertial_cylinder mass="0.1" radius="0.05" length="0.04">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <!-- Gazebo tag to make it interacting with Gazebo -->

     <gazebo reference="laser_frame">
        <material>Gazebo/Red</material>

        <!-- type ray is a gazebo type -->
        <sensor name="laser" type="ray">
            <!-- place it at the origin of the reference -->
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-1.57</min_angle>
                        <max_angle>1.57</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>12</max>
                </range>
            </ray>
            <!-- plugin to make gazebo speak with ros -->
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <!-- topic = "scan" -->
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <!-- will be put in the message of type <output_type>-->
                <frame_name>laser_frame</frame_name>
            </plugin>
        </sensor>
    </gazebo>


</robot>