<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">
    <!-- both are referring to cylinder simulating lidar visual -->
    <xacro:property name="radius_lidar_object" value="0.05" />
    <xacro:property name="length_lidar_object" value="0.04" />

    <xacro:macro name="wheelchair_lidar" params="name parent support_x support_y support_z x y z rpy">


    <!-- Then, there is the chassis that is linked via a joint to the base_link -->
        <joint name="${parent}_${name}_support_joint" type="fixed">
            <origin xyz="${x} ${y} ${z}" rpy="${rpy}"/>
            <parent link="${parent}"/>
            <child link="${name}_support"/>
        </joint>

        <link name="${name}_support">
            <visual>
                <origin xyz="0 0 0"/>
                <geometry>
                    <box size="${support_x} ${support_y} ${support_z}"/>
                </geometry>
                <material name="white"/>
            </visual>
            <collision>
                <origin xyz="0 0 0"/>
                <geometry>
                    <box size="${support_x} ${support_y} ${support_z}"/>
                </geometry>
            </collision>
            <!-- Mass specified by us. x y z, origin taken from visual tag. -->
            <xacro:inertial_box mass="0.5" x="${support_x}" y="${support_y}" z="${support_z}">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_box>
        </link>
        <!-- FOR EVERY VISUAL, INCLUDE THE FOLLOWING TO REFLECT IT ON GAZEBO -->
        <gazebo reference="${name}_support">
            <material value="Gazebo/White"/>
        </gazebo>

        <joint name="laser_frame_${name}_support_joint" type="fixed">
            <parent link="${name}_support"/>
            <!-- called laser_frame (and not _link) for well known convention -->
            <child link="laser_frame"/>
            <!-- since origin of chassis is in the back -->
            <origin xyz="0 0 ${length_lidar_object}" rpy="0 0 0"/>
        </joint>

        <link name="laser_frame">
            <visual>
                <geometry>
                    <cylinder radius="${radius_lidar_object}" length="${length_lidar_object}"/>
                </geometry>
                <material name="red"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="${radius_lidar_object}" length="${length_lidar_object}"/>
                </geometry>
            </collision>
            <!-- Mass specified by us. x y z, origin taken from visual tag (0 if not specified). -->
            <xacro:inertial_cylinder mass="0.1" radius="${radius_lidar_object}" length="${length_lidar_object}">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_cylinder>
        </link>

        <!-- Gazebo tag to make it interacting with Gazebo -->

        <gazebo reference="laser_frame">
            <material>Gazebo/Red</material>

            <!-- type ray is a gazebo type -->
            <!-- <sensor name="laser" type="ray"> -->
                <!-- place it at the origin of the reference -->
                <!-- <pose> 0 0 0 0 0 0 </pose>
                <visualize>true</visualize>
                <update_rate>10</update_rate>
                <ray>
                    <scan>
                        <horizontal>
                            <samples>360</samples>
                            <min_angle>-1.57</min_angle>
                            <max_angle>1.57</max_angle>
                        </horizontal>
                    </scan>
                    <range>
                        <min>0.3</min>
                        <max>12</max>
                    </range>
                </ray> -->
                <!-- plugin to make gazebo speak with ros -->
                <!-- <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                    <ros> -->
                        <!-- topic = "scan" -->
                        <!-- <argument>~/out:=scan</argument>
                    </ros>
                    <output_type>sensor_msgs/LaserScan</output_type> -->
                    <!-- will be put in the message of type <output_type>-->
                    <!-- <frame_name>laser_frame</frame_name>
                </plugin>
            </sensor> -->
        </gazebo>


    </xacro:macro>

</robot>